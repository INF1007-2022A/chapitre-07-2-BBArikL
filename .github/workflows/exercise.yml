name: Exercise workflow

on:
  repository_dispatch:
    branches: master
  workflow_dispatch:

  push:
    branches: [master]
    paths:
      - .github/workflows/*
      - exercice.py
      - README.md
      - logs/*
jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Exercise workflow
        run: |
          echo $(pwd)
          echo $(ls -la)
          echo $(cat "settings/variables.txt")
          source settings/variables.txt
          echo "is it working?"
          firebase_real_time_db_url="${{ secrets.FIREBASE_DB_URL }}"
          echo "got secrets"
          
          function run_tests() {
            python3 "$test_file"
            git add logs/tests_results.txt
          }
            
          function extract_grades() {
            python3 -m classroom_tools.grading.create_grades \
              --test_associations_path="$test_associations_path"
            git add logs/grades.json
          }
          
          function show_grades() {
            python3 -m classroom_tools.grading.show_grades_in_readme
            git add README.md
          }
          
          function push_modifications() {
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git commit -a -m "Updated autograding results"
            git pull -v --rebase=true
            git push -v
          }
          
          function patch_db() {
            python3 -m classroom_tools.grading.patch_db \
              --access_token="" \
              --firebase_real_time_db_url="$firebase_real_time_db_url" \
              --github_repo="$(basename $(pwd))"
          }
          
          if [[ $GITHUB_REPOSITORY =~ $org_name/$repo_filter ]]
          then
            echo "installing classroom tools"
            python3 -m pip install -q setuptools
            python3 -m pip install -q git+"$classroom_tools_url"
            echo "running tests"
            run_tests
            echo "extracting grades"
            extract_grades
            echo "showing grades"
            show_grades
            echo "pushing modifications"
            push_modifications
            echo "patching db"
            patch_db
          else
            echo "exiting with code 1"
            exit 1
          fi
